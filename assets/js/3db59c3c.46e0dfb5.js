"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[843],{5680:(e,n,r)=>{r.d(n,{xA:()=>u,yg:()=>g});var t=r(6540);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=t.createContext({}),s=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},u=function(e){var n=s(e.components);return t.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(r),m=i,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return r?t.createElement(g,o(o({ref:n},u),{},{components:r})):t.createElement(g,o({ref:n},u))}));function g(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[p]="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=r[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},702:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var t=r(8168),i=(r(6540),r(5680));r(1873);const a={},o="Supporting Additional Curves",c={unversionedId:"icicle/supporting-additional-curves",id:"icicle/supporting-additional-curves",title:"Supporting Additional Curves",description:"We understand the need for ZK developers to use different curves, some common some more exotic. For this reason we designed ICICLE to allow developers to add any curve they desire.",source:"@site/docs/icicle/supporting-additional-curves.md",sourceDirName:"icicle",slug:"/icicle/supporting-additional-curves",permalink:"/icicle/supporting-additional-curves",editUrl:"https://github.com/ingonyama-zk/icicle/tree/main/docs/icicle/supporting-additional-curves.md",tags:[],version:"current",lastUpdatedBy:"ImmanuelSegol",lastUpdatedAt:1709231177,formattedLastUpdatedAt:"2/29/2024",frontMatter:{},sidebar:"GettingStartedSidebar",previous:{title:"Multi GPU with ICICLE",permalink:"/icicle/multi-gpu"},next:{title:"Run ICICLE on Google Colab",permalink:"/icicle/colab-instructions"}},l={},s=[{value:"ICICLE Core",id:"icicle-core",level:2},{value:"Bindings",id:"bindings",level:2},{value:"Rust",id:"rust",level:3},{value:"Golang",id:"golang",level:3}],u={toc:s},p="wrapper";function d(e){let{components:n,...r}=e;return(0,i.yg)(p,(0,t.A)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"supporting-additional-curves"},"Supporting Additional Curves"),(0,i.yg)("p",null,"We understand the need for ZK developers to use different curves, some common some more exotic. For this reason we designed ICICLE to allow developers to add any curve they desire."),(0,i.yg)("h2",{id:"icicle-core"},"ICICLE Core"),(0,i.yg)("p",null,"ICICLE core is very generic by design so all algorithms and primitives are designed to work based of configuration files ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/ingonyama-zk/icicle/blob/main/icicle/curves/curve_config.cuh"},"selected during compile")," time. This is why we compile ICICLE Core per curve."),(0,i.yg)("p",null,"To add support a new curve you must create a new file under ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/ingonyama-zk/icicle/tree/main/icicle/curves"},(0,i.yg)("inlineCode",{parentName:"a"},"icicle/curves")),". The file should be named ",(0,i.yg)("inlineCode",{parentName:"p"},"<curve_name>_params.cuh"),"."),(0,i.yg)("p",null,"We also require some changes to ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/ingonyama-zk/icicle/blob/main/icicle/curves/curve_config.cuh#L16-L29"},(0,i.yg)("inlineCode",{parentName:"a"},"curve_config.cuh")),", we need to add a new curve id."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"...\n\n#define BN254     1\n#define BLS12_381 2\n#define BLS12_377 3\n#define BW6_761   4\n#define GRUMPKIN  5\n#define <curve_name> 6\n\n...\n")),(0,i.yg)("p",null,"Make sure to modify the ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/ingonyama-zk/icicle/blob/4beda3a900eda961f39af3a496f8184c52bf3b41/icicle/curves/curve_config.cuh#L16-L29"},"rest of the file")," accordingly."),(0,i.yg)("p",null,"Finally we must modify the ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/ingonyama-zk/icicle/blob/main/icicle/CMakeLists.txt#L64"},(0,i.yg)("inlineCode",{parentName:"a"},"make")," file")," to make sure we can compile our new curve."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"set(SUPPORTED_CURVES bn254;bls12_381;bls12_377;bw6_761;<curve_name>)\n")),(0,i.yg)("h2",{id:"bindings"},"Bindings"),(0,i.yg)("p",null,"In order to support a new curves in the binding libraries you first must support it in ICICLE core."),(0,i.yg)("h3",{id:"rust"},"Rust"),(0,i.yg)("p",null,"Create a new folder named ",(0,i.yg)("inlineCode",{parentName:"p"},"icicle-<curve_name>")," under the ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/ingonyama-zk/icicle/tree/main/wrappers/rust/icicle-curves"},"rust wrappers folder"),". Your new directory should look like this."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"\u2514\u2500\u2500 rust\n    \u251c\u2500\u2500 icicle-curves\n        \u251c\u2500\u2500 icicle-<curve_name>\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 Cargo.toml\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 build.rs\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 src/\n    \u2502\xa0\xa0 \u2502\xa0\xa0     \u251c\u2500\u2500 curve.rs\n    \u2502\xa0\xa0 \u2502\xa0\xa0     \u251c\u2500\u2500 lib.rs\n    \u2502\xa0\xa0 \u2502\xa0\xa0     \u251c\u2500\u2500 msm/\n    \u2502\xa0\xa0 \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 mod.rs\n    \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 ntt/\n    \u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 mod.rs\n")),(0,i.yg)("p",null,"Lets look at ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/ingonyama-zk/icicle/blob/main/wrappers/rust/icicle-curves/icicle-bn254/src/ntt/mod.rs"},(0,i.yg)("inlineCode",{parentName:"a"},"ntt/mod.rs"))," for example."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'...\n\nextern "C" {\n    #[link_name = "bn254NTTCuda"]\n    fn ntt_cuda<\'a>(\n        input: *const ScalarField,\n        size: usize,\n        is_inverse: bool,\n        config: &NTTConfig<\'a, ScalarField>,\n        output: *mut ScalarField,\n    ) -> CudaError;\n\n    #[link_name = "bn254DefaultNTTConfig"]\n    fn default_ntt_config() -> NTTConfig<\'static, ScalarField>;\n\n    #[link_name = "bn254InitializeDomain"]\n    fn initialize_ntt_domain(primitive_root: ScalarField, ctx: &DeviceContext) -> CudaError;\n}\n\n...\n')),(0,i.yg)("p",null,"Here you would need to replace ",(0,i.yg)("inlineCode",{parentName:"p"},"bn254NTTCuda")," with ",(0,i.yg)("inlineCode",{parentName:"p"},"<curve_name>NTTCuda"),". Most of these changes are pretty straight forward. One thing you should pay attention to is limb sizes as these change for different curves. For example ",(0,i.yg)("inlineCode",{parentName:"p"},"BN254")," ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/ingonyama-zk/icicle/blob/4beda3a900eda961f39af3a496f8184c52bf3b41/wrappers/rust/icicle-curves/icicle-bn254/src/curve.rs#L15"},"has limb size of 8")," but for your curve this may be different."),(0,i.yg)("h3",{id:"golang"},"Golang"),(0,i.yg)("p",null,"Golang is WIP in v1, coming soon. Please checkout a previous ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/ingonyama-zk/icicle/releases/tag/v0.1.0"},"release v0.1.0")," for golang bindings."))}d.isMDXComponent=!0},1873:(e,n,r)=>{r(6540)}}]);